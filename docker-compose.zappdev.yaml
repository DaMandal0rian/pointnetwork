version: '3.9'

services:
  blockchain_node:
    image: trufflesuite/ganache-cli:v6.12.2
    container_name: point_blockchain
    hostname: blockchain_node
    healthcheck:
      test: |
        wget -qO- http://localhost:7545 \
          --header='Content-Type: application/json' \
          --header="Accept: application/json" \
          --post-data='{"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":0}'
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 5s
    ports:
      - '7545:7545'
    volumes:
      - blockchain_data_zappdev:/data:rw
    environment:
      - DOCKER=true
    command: |
      -v -p 7545 -i 256 --keepAliveTimeout 20000 --db /data \
        --account 0x011967d88c6b79116bb879d4c2bc2c3caa23569edd85dfe0bc596846837bbc8e,0x56bc75e2d63100000

  contract_deployer:
    image: pointnetwork/pointnetwork_deployer:dev
    container_name: point_deployer
    depends_on:
      blockchain_node:
        condition: service_healthy
    deploy:
      restart_policy:
        condition: 'no'
    volumes:
      - shared_contracts_zappdev:/build:rw
      - ./truffle/contracts:/truffle/contracts:ro
      - ./truffle/migrations:/truffle/migrations:ro
      - ./truffle/truffle-config.js:/truffle/truffle-config.js:ro
    entrypoint: /truffle/run.js
    environment:
      BLOCKCHAIN_HOST: blockchain_node
      BLOCKCHAIN_PORT: 7545
      BLOCKCHAIN_NETWORK_ID: 256
      DEPLOYER_COMPILER_VERSION: native
      DEPLOYER_BUILD_PATH: /build

  point_node:
    extends:
      file: docker-compose.dev.yaml
      service: point_node
    depends_on:
      contract_deployer:
        condition: service_completed_successfully
    command: 'run start:docker:zappdev'
    volumes:
      - point_node_data_zappdev:/data
      - shared_contracts_zappdev:/app/truffle/build/contracts
      - ./resources/blockchain-test-key.json:/data/keystore/key.json
      - ./resources/arweave-test-key.json:/data/keystore/arweave.json
    environment:
      NODE_CONFIG_ENV: zappdev

  arlocal:
    extends:
      file: docker-compose.storage.yaml
      service: arlocal
    volumes:
      - arlocal_data_zappdev:/home/node/:rw


volumes:
  blockchain_data_zappdev:
  shared_contracts_zappdev:
  point_node_data_zappdev:
  arlocal_data_zappdev:
