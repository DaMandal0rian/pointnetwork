version: '3.9'

services:
  blockchain_node:
    image: cybercoredev/solana:${SOLANA_REVISION:-v1.7.9-resources}
    container_name: pointnetwork_blockchain_node
    hostname: blockchain_node
    healthcheck:
      test: solana cluster-version
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    environment:
      - SOLANA_URL=http://blockchain_node:8899
      - RUST_LOG=solana_runtime::system_instruction_processor=warn,solana_runtime::message_processor=debug,solana_bpf_loader=debug,solana_rbpf=debug
    expose:
      - "8899"
      - "9900"
      - "8900"
      - "8001"
      - "8001-8009/udp"
    volumes:
      - blockchain_node_data:/opt/solana/config:rw

  blockchain_provider:
    image: cybercoredev/proxy:v0.2.0
    container_name: pointnetwork_blockchain_provider
    depends_on:
      blockchain_node:
        condition: service_healthy
    healthcheck:
      test: |
        curl -X POST \
          -H 'Content-Type: application/json' \
          -d '{"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":0}' \
          http://localhost:9090/solana
      interval: 60s
      timeout: 5s
      retries: 4
      start_period: 30s
    environment:
      - CONFIG=ci
      - SOLANA_URL=http://blockchain_node:8899
    ports:
      - 127.0.0.1:9090:9090
    volumes:
      - blockchain_provider_env:/opt/env:rw
      - $BLOCKCHAIN_KEYSTORE:/root/.config/solana:rw
      - ./scripts/handle-neon-proxy.sh:/opt/proxy/handle-run-proxy.sh:ro
    entrypoint: /opt/proxy/handle-run-proxy.sh

  contract_deployer:
    image: pointnetwork/pointnetwork_deployer:$DEPLOYER_IMAGE_VERSION
    container_name: pointnetwork_contract_deployer
    depends_on:
      blockchain_provider:
        condition: service_healthy
    restart: 'no'
    volumes:
      - shared_contracts:/build:rw
      - $DEPLOYER_KEYSTORE:/root/.ethereum/keystore:ro
      - ./truffle/truffle-config-neon.js:/truffle/truffle-config.js:ro
      - ./truffle/migrations:/truffle/migrations:ro
      - ./truffle/contracts:/truffle/contracts:ro
    command: deploy --network $DEPLOYER_ENV
    env_file:
      - .env.deployer

volumes:
  shared_contracts:
  blockchain_node_data:
  blockchain_provider_env:
  blockchain_provider_config:
