version: '3.9'

services:
  arweave:
    image: lucaarweave/arweave-node:0.0.4
    container_name: storage
    hostname: arweave-node
    healthcheck:
      test: |
        wget -qO- http://localhost:1984/info
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 5s
    ports:
      - '1984:1984'
    environment:
      AR_RUNMODE: test
    volumes:
      - ./resources/arweave-test-genesis.csv:/opt/arweave/data/genesis_wallets.csv
      - arweave_data:/mnt/arweave-data

  gateway:
    image: lucaarweave/arweave-gateway:0.0.1
    container_name: gateway
    hostname: gateway
    volumes:
      - gateway_data:/app
    depends_on:
      gateway_db:
        condition: service_healthy
      arweave:
        condition: service_healthy
    ports:
      - '3000:3000'
    environment:
      DATABASE_HOST: gateway_db
      DATABASE_PORT: 5432
      POSTGRES_USER: arweave
      POSTGRES_PASSWORD: arweave
      POSTGRES_DB: arweave

  gateway_db:
    image: postgres:12
    container_name: gateway_db
    hostname: gateway_db
    volumes:
      - gateway_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U arweave"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: arweave
      POSTGRES_PASSWORD: arweave
      POSTGRES_DB: arweave
    command: -p 5432

  bundler:
    image: pointnetwork/arweave-bundler:v1.0.1
    container_name: bundler
    hostname: bundler
    depends_on:
      buckets:
        condition: service_completed_successfully
      arweave:
        condition: service_healthy
    volumes:
      - ./resources/arweave-test-key.json:/app/keystore/key.json
    environment:
      S3_HOST: bundler-cache
      S3_PORT: 9000
      S3_PROTOCOL: http
      S3_BUCKET: testbucket
      S3_KEY: miniouser
      S3_SECRET: miniopass
      ARWEAVE_HOST: arweave-node
      ARWEAVE_PORT: 1984
      ARWEAVE_PROTOCOL: http
      KEYSTORE: /app/keystore/key.json
      TESTMODE: '1'

  cache:
    image: minio/minio:latest
    container_name: cache
    hostname: bundler-cache
    command: server /data --console-address ':9001'
    healthcheck:
      test: curl -If http://localhost:9000/minio/health/ready > /dev/null
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 0s
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - bundler_data:/data
    environment:
      MINIO_ACCESS_KEY: miniouser
      MINIO_SECRET_KEY: miniopass

  buckets:
    image: minio/mc
    container_name: buckets
    depends_on:
      cache:
        condition: service_healthy
    environment:
      MC_HOST_minio: http://miniouser:miniopass@bundler-cache:9000
    entrypoint: >
      /bin/bash -c "
      mc ls minio/testbucket > /dev/null || (
      mc mb minio/testbucket && mc policy set public minio/testbucket && exit 0)"

volumes:
  arweave_data:
  gateway_data:
  bundler_data:
  gateway_db_data:
